extends layout

block head
  - var body = "index"
  - var title = avalon.website.front.title
  - var description = avalon.website.front.description
  - var keywords = avalon.website.front.keywords
  - var canonical = "http://www.avalon-rpg.com/"

block content
  .ui.content
    .contain
      h1.ui.title.center #{meta.title}
      if meta.subtitle
        h4.ui.sub.title.center #{meta.subtitle}
  
  .ui.content.margin-top
    .contain.large
      if meta.notice && meta.notice.show && meta.notice.text
        .ui.notice.box
          i(class="icon large " + meta.notice.icon)
          | #{meta.notice.text}
      .ui.grid.responsive
        .ten.column.wide.main
          | !{extra.intro.html}
          if recent
            h2.ui.title.underline #{meta.events.title}
            for update in recent.splice(0, meta.events.max)
              .event.ui.box.small
                .date #{update.date}
                .text #{update.item}


        .six.column.wide.sidebar
          include includes/multiform.jade
          .ui.block
            .content
              h3.ui.title.underline #{meta.information.title}
              ul.ui.menu
                for item in meta.information.items
                  li: a(href=item.url).item #{item.title}

          .ui.block
            .content
              p #{meta.search.title}
              form(action="/help/search").helpform
                .ui.fluid.icon.input
                  label HELP
                  input(type="text", name="page", list="pages")
                  i.search.icon

            .content
              p #{meta.search.rollcall}
              form(action="/rollcall/search").historyform
                .ui.fluid.icon.input
                  label HISTORY
                  input(type="text", name="character")
                  i.search.icon
                    
          .ui.block
            .content
              ul.ui.menu.social.center
                for item in meta.links.items
                  if item.social
                    a(href=item.url, class="item social " + item.social, title=item.title)
                      i.icon.large(class=item.social)

  .ui.scroll
    ul.top
      for blurb,i in meta.blurbs
        li.dot(data-id=i)
    for blurb, i in meta.blurbs
      .content(data-id=i)
        .contain.large
          h3.ui.title= blurb.title
          if (blurb.subtitle)
            h4.ui.title.subtitle= blurb.subtitle
          p= blurb.description
          if (blurb.link)
            a(href=blurb.link.url).ui.button= blurb.link.text

block scripts
  script(src="/js/jquery.validate.min.js")
  script.
    $(".switch.menu .item").click(function(e) {
      var target = $(e.currentTarget);
      var type = target.data("type");

      if (type == "create") {
        $("#loginForm").hide("fast");
        $("#createForm").show("fast");
        $(".switch.menu .item").removeClass("active");
        target.addClass("active");
      } else {
        $("#createForm").hide("fast");
        $("#loginForm").show("fast");
        $(".switch.menu .item").removeClass("active");
        target.addClass("active");
      }
    })
    $.validator.addMethod(
        "regex",
        function(value, element, regexp) {
            var re = new RegExp(regexp);
            return this.optional(element) || re.test(value);
        },
        "Check your input."
    );

    $("#createForm").validate({
      onkeyup: false,
      rules: {
        username: {
          required: true,
          minlength: 3,
          remote: {
            url: "/api/checkname",
            data: {
              format: "boolean"
            }
          }
        },
        password: "required",
        confirmpass: {
          equalTo: "#create-password",
          required: true
        },
        email: "email",
      },
      messages: {
          username: {
            required: "This field is required",
            minlength: "Your username needs to be at least 3 characters",
            maxlength: "Your username needs to be less than 18 characters",
            remote: "You can't use this name, try another one."
          }
        }
    });

    $("#loginForm").validate({
      rules: {
        username: {
          required: true,
          minlength: 3,
          maxlength: 18
        },
        password: "required"
      }
    });

    $("#login-username").rules("add", { regex: "^[a-zA-Z]+$", messages: {regex: "Only letters allowed, no spaces or numbers"} });
    $("#create-username").rules("add", { regex: "^[a-zA-Z]+$", messages: {regex: "Only letters allowed, no spaces or numbers"} });

    $("#create-password").rules("add", { regex: "^[a-zA-Z0-9]+$", messages: {regex: "Only letters and numbers allowed, no spaces"} });
  
    $("input[type='radio'][name='run']").change(function(e) {
      var target = $(e.currentTarget);
      var value = target.val();
      var form = target.closest("form");
      if (value == "umbra") form.attr("action", "http://umbra.avalon-rpg.com");
      //- if (value == "umbra") form.attr("action", "http://localhost:2252");
      if (value == "applet") form.attr("action", "/javalon/");
      if (value == "lumiere") form.attr("action", "/lumiere/");
    });

  script.
    $(document).ready(function() {
      var current = 0;
      var slides = $(".ui.scroll .content");
      var dots = $(".ui.scroll .top .dot");

      function next() {
        $(slides.get(current)).removeClass("active").addClass("prev");
        $(dots.get(current)).removeClass("active").addClass("prev");
        current++;
        $(dots.get(current)).removeClass("prev").addClass("active");
        $(slides.get(current)).removeClass("prev").addClass("active");
        if (current >= slides.length) {
          current = 0;
          dots.removeClass("prev active");
          slides.removeClass("prev active");
          $(dots.get(current)).addClass("active"); 
          $(slides.get(current)).addClass("active"); 
        }
      }

      dots.click(function(e) {
        var target = $(e.currentTarget);
        var id = target.data("id");
        current = parseInt(id);

        dots.removeClass("prev active");
        slides.removeClass("prev active");
        $(dots.get(current)).addClass("active"); 
        $(slides.get(current)).addClass("active"); 

        interval = clearInterval(interval);
      })

      $(slides.get(current)).addClass("active"); 
      $(dots.get(current)).addClass("active"); 

      var interval = setInterval(function () {
        next();
      }, 10000);
    })