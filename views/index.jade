extends layout

block head
  - var body = "index"
  - var title = meta.seo.title
  - var description = meta.seo.description
  - var keywords = meta.seo.keywords
  - var canonical = "http://www.avalon-rpg.com/"

block content
  .ui.content
    .contain
      h1.ui.title.center #{meta.title}
      if meta.subtitle
        h4.ui.sub.title.center #{meta.subtitle}
  
  .ui.content.margin-top
    .contain.large
      if meta.notice && meta.notice.show && meta.notice.text
        .ui.notice.box
          i(class="icon large " + meta.notice.icon)
          | #{meta.notice.text}
      .ui.grid.responsive
        .ten.column.wide.main
          | !{extra.intro.html}
          if recent
            h2.ui.title.underline #{meta.events.title}
            for update in recent.splice(0, meta.events.max)
              .event.ui.box.small
                .date #{update.date}
                .text #{update.item}


        .six.column.wide.sidebar
          include includes/multiform.jade
          .ui.block
            .content
              h3.ui.title.underline #{meta.information.title}
              ul.ui.menu
                for item in meta.information.items
                  li: a(href=item.url).item #{item.title}

          .ui.block
            .content
              p #{meta.search.title}
              form(action="/help/search").helpform
                .ui.fluid.icon.input
                  label HELP
                  input(type="text", name="page", list="pages")
                  i.search.icon

            .content
              p #{meta.search.rollcall}
              form(action="/rollcall/search").historyform
                .ui.fluid.icon.input
                  label HISTORY
                  input(type="text", name="character")
                  i.search.icon
                    
          .ui.block
            .content
              ul.ui.menu.social.center
                for item in meta.links.items
                  if item.social
                    a(href=item.url, class="item social " + item.social, title=item.title)
                      i.icon.large(class=item.social)

  .ui.scroll
    ul.top
      for blurb,i in meta.blurbs
        li.dot(data-id=i)
    for blurb, i in meta.blurbs
      .content(data-id=i)
        .contain.large
          h3.ui.title= blurb.title
          if (blurb.subtitle)
            h4.ui.title.subtitle= blurb.subtitle
          p= blurb.description
          if (blurb.link)
            a(href=blurb.link.url).ui.button= blurb.link.text

append scripts
  script(src="/js/jquery.validate.min.js")
  script.
    var createNewUser = false;
    $(".ui.form.login .expand").bind("click", function() {
      var hidden = $(".ui.form.login .hidden");

      if (hidden.is(":visible")) {
        hidden.hide("fast");
        $(".ui.form.login .ui.title, .ui.form.login .save.button").text("Login");
        $(".ui.form.login #create").val("no");
        createNewUser = false;
      } else {
        $(".ui.form.login .ui.title, .ui.form.login .save.button").text("Create Character");
        hidden.show("fast");
        $(".ui.form.login #create").val("yes");
        createNewUser = true;
      }

      $(this).find(".icon").toggleClass("active");
    });

    $.validator.setDefaults({
      errorClass: 'errorField',
      errorElement: 'div',
      errorPlacement: function(error, element) {
        error.addClass("ui red pointing above ui label error").appendTo( element.closest('div.field') );
      },
      highlight: function(element, errorClass, validClass) {
        $(element).closest("div.field").addClass("error").removeClass("success");
      },
      unhighlight: function(element, errorClass, validClass){
        $(element).closest(".error").removeClass("error").addClass("success");
      }

    });

    loginValidator = $('#login-form').validate({});

    $('#create-username').rules('add', {
      onkeyup: false,
      required: true,
      minlength: 3,
      maxlength: 18,
      remote: {
        param: {
          url: "/api/checkname/",
          data: {
            'format': "boolean"
          }
        },
        depends: function(element) { return createNewUser; }
      },
      messages: {
        required:  'This field is required',
        minlength: 'Your username needs to be at least 3 characters',
        maxlength: 'Your username needs to be less than 18 characters',
        remote:    'This username is unavailable'
      }
    });

    $('#create-password').rules('add', { required: true });

    $('#create-confirmpass').rules('add', {
      required: { depends: function(element) { return createNewUser; } },
      equalTo: '#create-password'    
    });

    $('#create-email').rules('add', {
      email: true    
    });

    $("input[type='radio'][name='run']").change(function(e) {
      var target = $(e.currentTarget);
      var value = target.val();
      var form = target.closest("form");
      if (value == "umbra") form.attr("action", "http://umbra.avalon-rpg.com");
      //- if (value == "umbra") form.attr("action", "http://localhost:2252");
      if (value == "applet") form.attr("action", "/javalon");
      if (value == "lumiere") form.attr("action", "/lumiere");
    });

  script.
    $(document).ready(function() {
      var current = 0;
      var slides = $(".ui.scroll .content");
      var dots = $(".ui.scroll .top .dot");

      function next() {
        $(slides.get(current)).removeClass("active").addClass("prev");
        $(dots.get(current)).removeClass("active").addClass("prev");
        current++;
        $(dots.get(current)).removeClass("prev").addClass("active");
        $(slides.get(current)).removeClass("prev").addClass("active");
        if (current >= slides.length) {
          current = 0;
          dots.removeClass("prev active");
          slides.removeClass("prev active");
          $(dots.get(current)).addClass("active"); 
          $(slides.get(current)).addClass("active"); 
        }
      }

      dots.click(function(e) {
        var target = $(e.currentTarget);
        var id = target.data("id");
        current = parseInt(id);

        dots.removeClass("prev active");
        slides.removeClass("prev active");
        $(dots.get(current)).addClass("active"); 
        $(slides.get(current)).addClass("active"); 

        interval = clearInterval(interval);
      })

      $(slides.get(current)).addClass("active"); 
      $(dots.get(current)).addClass("active"); 

      var interval = setInterval(function () {
        next();
      }, 10000);
    })