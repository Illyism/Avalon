extends ../layout

block head
  - var title = mkTitle(avalon.website.play.index.title)
  - var description = avalon.website.play.index.description
  - var keywords = mkKeywords(avalon.website.play.index.keywords)
  - var canonical = "http://www.avalon-rpg.com/play/"
    
block content
  .ui.content.play
    .contain
      - console.log(createForm, error, form)
      if (error)
        .ui.box.small.error
          h3.ui.title #{error.message}
  
      .ui.box.small.tablet-only
        h3.ui.title.underline #{meta.umbra.title}
        p #{meta.umbra.description}
        a(href="http://umbra.avalon-rpg.com", target="_blank").ui.button
          i(class="icon large tablet")
          | #{meta.umbra.button}

      .ui.grid.responsive
        include ../includes/create
        include ../includes/login
        .eight.column.wide
          +create()(class="ui box")

        .eight.column.wide
          +login()(class="ui box")
          
          
          .ui.box
            for group in meta.clients
              .head.item #{group.title}
              ul.ui.menu.vertical.dotted
                for item in group.items
                  a(target="_blank", href=item.link).item #{item.title}
              hr
            h4.ui.title.center: a(href="/connect/") More Information

block scripts
  script(src="/js/jquery.validate.min.js")
  script.
    $.validator.addMethod(
        "regex",
        function(value, element, regexp) {
            var re = new RegExp(regexp);
            return this.optional(element) || re.test(value);
        },
        "Check your input."
    );

    $("#createForm").validate({
      onkeyup: false,
      rules: {
        username: {
          required: true,
          minlength: 3,
          remote: {
            url: "/api/checkname",
            data: {
              format: "boolean"
            }
          }
        },
        password: "required",
        confirmpass: {
          equalTo: "#create-password",
          required: true
        },
        email: "email",
      },
      messages: {
          username: {
            required: "This field is required",
            minlength: "Your username needs to be at least 3 characters",
            maxlength: "Your username needs to be less than 18 characters",
            remote: "You can't use this name, try another one."
          }
        }
    });

    $("#loginForm").validate({
      rules: {
        username: {
          required: true,
          minlength: 3,
          maxlength: 18
        },
        password: "required"
      }
    });

    $("#login-username").rules("add", { regex: "^[a-zA-Z]+$", messages: {regex: "Only letters allowed, no spaces or numbers"} });
    $("#create-username").rules("add", { regex: "^[a-zA-Z]+$", messages: {regex: "Only letters allowed, no spaces or numbers"} });

    $("#create-password").rules("add", { regex: "^[a-zA-Z0-9]+$", messages: {regex: "Only letters and numbers allowed, no spaces"} });

    $("input[type='radio'][name='run']").change(function(e) {
      var target = $(e.currentTarget);
      var value = target.val();
      var form = target.closest("form");
      if (value == "umbra") form.attr("action", "http://umbra.avalon-rpg.com");
      //- if (value == "umbra") form.attr("action", "http://localhost:2252");
      if (value == "applet") form.attr("action", "/javalon/");
      if (value == "lumiere") form.attr("action", "/lumiere/");
    });