extends ../layout

block head
  - var title = meta.seo.title
  - var description = meta.seo.description
  - var keywords = meta.seo.keywords
  link(rel="canonical", href="http://www.avalon-rpg.com/play/")
    
block content
  .ui.content.play
    .contain
      .ui.box.small.tablet-only
        h3.ui.title.underline #{meta.umbra.title}
        p #{meta.umbra.description}
        a(href="http://umbra.avalon-rpg.com", target="_blank").ui.button
          i(class="icon large tablet")
          | #{meta.umbra.button}

      .ui.grid
        .eight.column.wide

          form(method="post", action="/lumiere/").ui.form.box#createForm
            h3.ui.title.underline Create a new Avalon character
            .field.username
              .ui.input
                label(for="create-username") Character Name
                input#create-username(type="text", name="username", maxlength=18)
                p #{meta.form.username}
            .two.fields.password
              .field
                .ui.input
                  label(for="create-password") Password
                  input#create-password(type="password", name="password", maxlength=50)
              .field
                .ui.input
                  label(for="create-confirmpass") Confirm Password
                  input#create-confirmpass(type="password", name="confirmpass", maxlength=50)
              p(style="margin-bottom: 16px;") #{meta.form.password}
            .field.user
              .ui.input
                label(for="create-email") Email
                input#create-email(type="text", name="email")
                p #{meta.form.email}
            .two.fields
              p Gender
              .field.inline
                input#male(type="radio", name="gender", value="male", checked="checked")
                label(for="male") Male
              .field.inline
                input#female(type="radio", name="gender", value="female")
                label(for="female") Female
            .two.fields
              p Client
              .field.inline
                input#create-run-lumiere(type="radio", name="run", value="lumiere", checked="checked")
                label(for="create-run-lumiere") Lumiere
                p #{meta.form.lumiere}
              .field.inline
                input#create-run-applet(type="radio", name="run", value="applet")
                label(for="create-run-applet") Javalon
                p #{meta.form.lumiere}
              p #{meta.form.clients}
            input(type="hidden", name="create", value="yes")
            input(type="hidden", name="loginkey", value="")
            button.ui.button.save.fluid(style="margin-top: 16px;") Create a new character

        .eight.column.wide
          form(method="post", action="/lumiere/").ui.form.box#loginForm
            h3.ui.title.underline Login existing character
            .field.username
              .ui.input
                label(for="login-username") Character Name
                input#login-username(type="text", name="username")
            .field
              .ui.input
                label Password
                input#login-password(type="password", name="password")
            .two.fields
              p Client
              .field.inline
                input#login-run-lumiere(type="radio", name="run", value="lumiere", checked="checked")
                label(for="login-run-lumiere") Lumiere
                p #{meta.form.lumiere}
              .field.inline
                input#login-run-applet(type="radio", name="run", value="applet")
                label(for="login-run-applet") Javalon
                p #{meta.form.javalon}
              p #{meta.form.clients}

            input(type="hidden", name="create", value="no")
            input(type="hidden", name="loginkey", value="0")
            button.ui.button.save.fluid(style="margin-top: 16px;") Login
          .ui.box
            for group in meta.clients
              .head.item #{group.title}
              ul.ui.menu.vertical.dotted
                for item in group.items
                  a(target="_blank", href=item.link).item #{item.title}
              hr
            h4.ui.title.center: a(href="/connect/") More Information

block scripts
  script(src="http://ajax.aspnetcdn.com/ajax/jquery.validate/1.13.1/jquery.validate.min.js")
  script.
    $("#createForm").validate({
      onkeyup: false,
      rules: {
        username: {
          required: "required",
          minlength: 3,
          remote: {
            url: "/api/checkname",
            data: {
              format: "boolean"
            }
          }
        },
        password: "required",
        confirmpass: {
          equalTo: "#create-password",
          required: "required"
        },
        email: "email",
      },
      messages: {
          username: {
            required: "This field is required",
            minlength: "Your username needs to be at least 3 characters",
            maxlength: "Your username needs to be less than 18 characters",
            remote: "You can't use this name, try another one."
          }
        }
    });

    $("#loginForm").validate({
      rules: {
        username: {
          required: "required",
          minlength: 3,
          maxlength: 18
        },
        password: "required"
      }
    });