extends ../layout

block head
  if (page.type == "library")
    - var title = page.library.meta.seo.title
    - var description = page.library.meta.seo.description
    - var keywords = page.library.meta.seo.keywords
  if (page.canonical)
    - var canonical = page.canonical
  else if (page.library.meta.canonical)
    - var canonical = page.library.meta.canonical
block content
  .ui.content.page.login
    .contain.large
      if (page.type == "library")
        if (page.library.meta.subtitle)
          h1.ui.title.center #{page.library.meta.title}
          h2.ui.sub.title.center.underline #{page.library.meta.subtitle}
        else
          h1.ui.title.center.underline #{page.library.meta.title}
      .ui.grid.responsive
        .twelve.column.wide.main
          if (page.library)
            .text.help.markdown !{page.library.html}
          else
            .text.help !{page.html}

        .four.column.wide.sidebar
          include ../includes/multiform

block scripts
  script(src="/js/jquery.validate.min.js")
  script.
    var createNewUser = false;
    $(".ui.form.login .expand").bind("click", function() {
      var hidden = $(".ui.form.login .hidden");

      if (hidden.is(":visible")) {
        hidden.hide("fast");
        $(".ui.form.login .ui.title, .ui.form.login .save.button").text("Login");
        $(".ui.form.login #create").val("no");
        createNewUser = false;
      } else {
        $(".ui.form.login .ui.title, .ui.form.login .save.button").text("Create Character");
        hidden.show("fast");
        $(".ui.form.login #create").val("yes");
        createNewUser = true;
      }

      $(this).find(".icon").toggleClass("active");
    });

    $.validator.setDefaults({
      errorClass: 'errorField',
      errorElement: 'div',
      errorPlacement: function(error, element) {
        error.addClass("ui red pointing above ui label error").appendTo( element.closest('div.field') );
      },
      highlight: function(element, errorClass, validClass) {
        $(element).closest("div.field").addClass("error").removeClass("success");
      },
      unhighlight: function(element, errorClass, validClass){
        $(element).closest(".error").removeClass("error").addClass("success");
      }

    });

    loginValidator = $('#login-form').validate({});

    $('#create-username').rules('add', {
      onkeyup: false,
      required: true,
      minlength: 3,
      maxlength: 18,
      remote: {
        param: {
          url: "/api/checkname/",
          data: {
            'format': "boolean"
          }
        },
        depends: function(element) { return createNewUser; }
      },
      messages: {
        required:  'This field is required',
        minlength: 'Your username needs to be at least 3 characters',
        maxlength: 'Your username needs to be less than 18 characters',
        remote:    'This username is unavailable'
      }
    });

    $('#create-password').rules('add', { required: true });

    $('#create-confirmpass').rules('add', {
      required: { depends: function(element) { return createNewUser; } },
      equalTo: '#create-password'    
    });

    $('#create-email').rules('add', {
      email: true    
    });

    $("input[type='radio'][name='run']").change(function(e) {
      var target = $(e.currentTarget);
      var value = target.val();
      var form = target.closest("form");
      if (value == "umbra") form.attr("action", "http://umbra.avalon-rpg.com");
      //- if (value == "umbra") form.attr("action", "http://localhost:2252");
      if (value == "applet") form.attr("action", "/javalon");
      if (value == "lumiere") form.attr("action", "/lumiere");
    });
